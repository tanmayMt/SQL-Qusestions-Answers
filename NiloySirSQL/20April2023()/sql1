1.  select FIRST_NAME as WORKER_NAME
    from WORKER;

2.  select upper(FIRST_NAME)
    from WORKER;

3.  select distinct DEPARTMENT
    from WORKER;

4.  select substr(FIRST_NAME, 1, 3)
    from WORKER;

5.  select instr('FIRST_NAME', 'a') as POSITION
    from WORKER
    where FIRST_NAME = 'Amitabh';

6.  select rtrim(FIRST_NAME)
    from WORKER;

7.  select ltrim(DEPARTMENT)
    from WORKER;

8.  select distinct DEPARTMENT, length(DEPARTMENT) as LENGTH
    from WORKER;

12. select *
    from WORKER
    order by FIRST_NAME, DEPARTMENT desc;
    
13. select *
    from WORKER
    where FIRST_NAME = "Vipul"
       or FIRST_NAME = "Satish";
       
14. select *
    from WORKER
    where FIRST_NAME not in ("Vipul", "Satish");
    
15. select *
    from WORKER
    where DEPARTMENT = "Admin";

/////////////////////////////////

16.  select * from WORKER 
     where FIRST_NAME like '%a%';

17. select * from WORKER 
    where FIRST_NAME like '%a';

18. select * from WORKER 
    where FIRST_NAME like '_____h';

19. select * from WORKER 
    where SAlARY >= 100000 and SALARY <= 500000;


20. select * from WORKER
    where JOINNING_DATE = "2014-02-20 09:00:00";

21. select count(*) as Number_of_Admin from WORKER
    where DEPARTMENT = "Admin";


22. select  * from WORKER 
    where SAlARY >= 50000 and SALARY <= 100000;

23. select DEPARTMENT, count(WORKER_ID) No_Of_Workers from WORKER
    group by DEPARTMENT
    order by No_Of_Workers desc;

24. select WORKER_ID,FIRST_NAME,LAST_NAME,SALARY,JOINNING_DATE,DEPARTMENT   from WORKER,TITLE
    where WORKER.WORKER_ID = TITLE.WORKER_REF_ID
    and WORKER_TITLE= "Manager";
   
25. select *, count(*) from BONUS
    group by WORKER_REF_ID
    having (count(*) > 1);

26. select * from WORKER
    where mod(WORKER_ID,2) != 0;
   
27. select * from WORKER
    where mod(WORKER_ID,2) = 0;

28. create table TITLE_CLONE like TITLE;
    insert into TITLE_CLONE select * from TITLE;
    select * from TITLE;

29. select WORKER_REF_ID
    from BONUS
    intersect
    select WORKER_REF_ID
    from TITLE;

30. select * from TITLE
    where not exists
    (
     select * from TITLE_CLONE
     where TITLE.WORKER_REF_ID = TITLE_CLONE.WORKER_REF_ID
    );

31. select curdate() as CUR_DATE;
    select getdate() as CUR_DATE; //getdate() function is not executed.

32. select * from WORKER
    limit 3;
    select top 5 * from WORKER; //top is not executed.

33. select SALARY from WORKER
    order by SALARY desc limit 5;

34. select max(SALARY) from WORKER
    where SALARY < (select max(SALARY) from WORKER) and SALARY<(select max(SALARY) from    WORKER) and SALARY< (select max(SALARY) from WORKER) and SALARY< (select max(SALARY) from WORKER);


35. select * from WORKER,WORKER A
    where WORKER.SALARY=A.SALARY and WORKER.WORKER_ID != A.WORKER_ID;

36. select max(SALARY) from WORKER
    where SALARY < (select max(SALARY) from WORKER);

37. select * from WORKER A
    cross join
    (select 1 as n union all select 2) n;

38. select WORKER_REF_ID
    from BONUS
    intersect
    select WORKER_REF_ID
    from TITLE;

39. select * from WORKER
    where WORKER_ID <= (select count(WORKER_ID)/2 from Worker);

40. select DEPARTMENT from WORKER
    group by DEPARTMENT
    having count(DEPARTMENT) < 5;

41. select DEPARTMENT,count(DEPARTMENT) no_of_workers from WORKER
    group by DEPARTMENT;

42. select * from WORKER
    order by WORKER_ID desc limit 1;

43. select * from WORKER
    order by WORKER_ID limit 1;

44. select * from WORKER
    order by WORKER_ID desc limit 5;

45. select DEPARTMENT,max(SALARY) MAX_SALARY from WORKER
    group by DEPARTMENT;

46. SELECT DISTINCT SALARY
    FROM WORKER A
    WHERE 3 >= (
                SELECT COUNT(DISTINCT SALARY) 
		    FROM WORKER B 
                WHERE B.SALARY >= A.SALARY
               ) 
    ORDER BY A.SALARY DESC;

47. SELECT DISTINCT SALARY
    FROM WORKER A
    WHERE 3 >= (
                 SELECT COUNT(DISTINCT SALARY) 
		     FROM WORKER B 
                 WHERE B.SALARY <= A.SALARY
               ) 
    ORDER BY A.SALARY;

48.


49. select DEPARTMENT, sum(SALARY) TOTAL_SALARY from WORKER
    group by DEPARTMENT;

50. select DEPARTMENT, max(SALARY) HIGHEST_SALARY from WORKER
    group by DEPARTMENT;



// Display name and Salary of all WORKERs reciving highest salary
select FIRST_NAME, SALARY from WORKER
where SALARY >= all
               ( 
                select SALARY from WORKER
		   );
